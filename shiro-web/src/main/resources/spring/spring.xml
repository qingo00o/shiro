<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

		<!-- 将spring-dao引入进来 -->
		<import resource="spring-dao.xml"/>
		<import resource="spring-redis.xml"/>
		<context:component-scan base-package="com.study"></context:component-scan>

		<!-- 配置 ShiroFilter.  id 必须和 web.xml 文件中配置的 DelegatingFilterProxy 的 <filter-name> 一致.
		若不一致, 则会抛出: NoSuchBeanDefinitionException. 因为 Shiro 会来 IOC 容器中查找和 <filter-name> 名字对应的 filter bean. --> 
		<bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<!-- 登录页面 -->
			<property name="loginUrl" value="login.html" />
			<!-- 未授权的跳转页面，不生效，在SpringMVC.xml里面配置解决 -->
			<property name="unauthorizedUrl" value="403.html" />
			<!-- shiro的过滤器链 -->
			<property name="filterChainDefinitions">
					<value>
						
						/login.html = anon
						/subLogin = anon
						<!-- /testShiroFilterRole = roles["admin"]
						/testShiroFilterRole1 = roles["admin","admin1"]
						/testShiroFilterPermission=perms["user:delete"] -->
						
						
						<!-- 使用自定义的过滤器过滤 -->
						/testShiroFilterRole1 = rolesOr["admin","admin1"]
						/*=authc
					</value>
			</property>
			<!-- 配置自定义的过滤器 -->
			<property name="filters">
					<util:map>
							<entry key="rolesOr"  value-ref="rolesOrFilter"></entry>
					</util:map>
			</property>
		</bean>
		<!-- 定义自定义的过滤器 -->
		<bean class="com.study.filter.RolesOrFilter"   id="rolesOrFilter"></bean>
		
		
		<!-- 创建securityManager对象 -->
		 <bean id="securityManager"  class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm"  ref="realm"></property>
			<property name="sessionManager"  ref="sessionManager"></property>
			<property name="cacheManager"  ref="cacheManager"></property>
			<property name="rememberMeManager"  ref="cookieRememberMeManager"></property>
		</bean> 
		
		<!-- 1、创建自定义realm，并在realm中设置CredentialsMatcher对象用来加密 -->
		<bean id="realm" class="com.study.shiro.realm.CustomRealm">
				<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		</bean>
		<!-- 设置加密方式 -->
		<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"  id="credentialsMatcher">
			<property name="hashAlgorithmName"  value="md5"></property>
			<property name="hashIterations"  value="1"></property>
		</bean>
		
		<!-- 2、设置自定义会话管理 -->
		<!-- <bean  class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"   id="sessionManager">
			<property name="sessionDAO"  ref="redisSessionDao"></property>
		</bean> -->
		<bean  class="com.study.session.CustomSessionManager"   id="sessionManager">
			<property name="sessionDAO"  ref="redisSessionDao"></property>
		</bean>
		<bean class="com.study.session.RedisSessionDao"  id="redisSessionDao"></bean>
		
		<!--3、缓存管理 -->
		<bean class="com.study.cache.RedisCacheManager"  id="cacheManager"></bean>
		
		<!-- 4、记住我 -->
		<bean class="org.apache.shiro.web.mgt.CookieRememberMeManager"  id="cookieRememberMeManager">
			<property name="cookie"  ref="cookie"></property>
		</bean>
		<bean class="org.apache.shiro.web.servlet.SimpleCookie"  id="cookie">
				<constructor-arg value="rememberMe"></constructor-arg>
				<property name="maxAge"  value="60000"></property>
		</bean>
</beans>
